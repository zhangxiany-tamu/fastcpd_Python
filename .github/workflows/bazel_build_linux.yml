name: bazel_build_linux.yml

on: ['push']

jobs:
  test_linux:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Update system
        run: sudo apt update

      - name: Install Dev Dependencies
        run: sudo apt install python3-dev

      - name: Build the code
        run: bazel build //... --subcommands

      - name: Setup venv
        run: make venv

      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements_lock.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install requirements
        run: make install

      - uses: actions/cache/save@v3
        id: cache-pip-linux
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements_lock.txt') }}

      - name: Install pip wheel
        run: make install_fastcpd

      - name: make sdist
        run: make sdist

      - name: Lint with flake8
        run: |
          pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --exclude venv/,env/,.venv/ --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --exclude venv/,env/,.venv/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Install `twine` to publish to PyPI.
        run: python -m pip install twine

      - name: Publish to PyPI test
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TEST_TOKEN }}
        run: |
          make upload

      - name: Publish to PyPI
        if: github.ref == 'refs/heads/main'
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          make upload_prod
