name: bazel_test_mac.yml

on:
  push:
    paths-ignore:
      - 'docs/**'
      - 'paper/**'
      - 'tests/**'
      - 'mkdocs.yml'

jobs:
  test_macos_bazel:
    runs-on: macos-13

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, which is the CWD for
      # the rest of the steps
      - uses: actions/checkout@v4

        # test
      - name: Build the code
        run: bazel build //...

      - name: Run bazel tests
        run: bazel test --test_output=errors //... --test_size_filters=medium


  test_macos_python:
    needs: test_macos_bazel

    # virtual environments: https://github.com/actions/virtual-environments
    runs-on: macos-13

    strategy:
      fail-fast: true
      matrix:
        python-version: [ "3.10", "3.11", "3.12", ]

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, which is the CWD for
      # the rest of the steps
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Python version check
        run: PYTHON=python3 python --version

      - name: Install dependencies
        run: PYTHON=python3 make install

      - name: Build wheel
        run: PYTHON=python3 make wheel

      - name: install wheel in dist folder
        run: PYTHON=python3 python -m pip install dist/fastcpd-*.whl

      - name: Run python tests
        run: |
          mkdir -p tmp && \
          cd tmp && \
          cp -R ../tests  . && \
          python3 -m pytest tests -m "not long"

      - name: Lint with flake8
        run: |
          pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --exclude venv/,env/,.venv/ --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --exclude venv/,env/,.venv/ --count --exit-zero --max-complexity=15 --max-line-length=127 --statistics

      - name: Install `twine` to publish to PyPI.
        run: python -m pip install twine

      - name: Publish to PyPI test
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TEST_TOKEN }}
        run: |
          PYTHON=python3 make upload

      - name: Publish to PyPI
        if: github.ref == 'refs/heads/main'
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          PYTHON=python3 make upload_prod
